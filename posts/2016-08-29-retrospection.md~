# 复盘

最近接手了一个 iOS 和 Android 的移动端 SDK 项目，技术不难，而且跟 MFC, Qt 之流差别也不大。于是有时间对过去一年的项目做一个复盘。

去年 8 月 10 日，我以 Docker 技术专家的身份来到这里，负责一个容器化项目。那时，正是 Docker 技术初步成熟的时候。我所在的团队想把这种技术落实，应用到业务中。在我过去之前，他们已经有了一些初步的探索，和一些零散的代码。但是，他们也遇到了一些技术和人力上的困难。我的强势加入，让他们（特别是经理）对这个项目重燃信心，事情就是这样开始的。

接下来的一个月，我通过解析项目的代码，还原了需求。这让我有些不安。过往的经验，让我觉得应该有 Quick Study 来澄清需求，否则团队就没有目标了，不知道项目要做成什么样的。本着互联网公司，不能要求太多，我在团队内（其实就是向经理）调查了项目需求，得到了一个误导性的愿景：我们要用这个系统，管理我司分布在全国四个大区的三千多台服务器。我们根本没有考虑，如何向业务方推广这个系统。更为关键一点，初到咋来的我，并不知道我司所有的服务器已经有一套完善的运维和发布系统在管理；经理，也没有意识到我们正在开发的系统，本质上其实是在重复实现已有的系统。

转眼，国庆节过去了。项目有了一些产出。能这么快有东西出来，一方面来自经理 Q3 考核的压力，另一方面是借助开源产品搭建平台和框架。我们在一个即将边缘化的业务中，试点采用新系统，获得了不错的效果。这时已经接近年底，除了继续完善和解决系统在试用中发现的问题，我规划了明年的计划，也确定了与 Service 平台业务以及 Big Data 平台业务的合作意向。到这个节点，项目和团队都非常健康，我们在短期就达成了上级的期望，也计划着招募更多的人，来把项目做强做大。

2016 年 Q1 很快就过去，这段时间我独自完成了一些关键性的功能，使这个系统与开源产品区分开来。这些工作包括：

* 一个与 Virtual Machine 非常相似的 Docker Image
* 容器存储解决方案：可选 loop device 和 local disk
* 容器网络解决方案：可选 iptable-based port mapping 和 tunnel-based virtual interface
* 一个 Golang + JavaScript 实现的 Web 控制台

由于这一年外部和内部环境都不好，与两个业务方的合作无疾而终。我们在自己的部门内，找到了一个新业务，可以用来实施这个系统。这是经理唯一能够控制的。实施过程中，我对这个系统的认识越发精准，也越发感觉到，在我司这样一个基础设施早已完善的情形下，找不到切入点，来应用这个项目。逆境下一些问题也逐渐暴露出来：

* 团队成员积极性不高
* 经理对我本人的期望过高
* 我独自完成所有开发，独自负责业务推广
* 项目的难度和要求，对普通程序员来说，是非常高的；招不到合适的人。项目的效果，不透明，不直观

这几点，互为因果……在 Q2 我们尝试了各种道路，陷入绝境：支持 HDFS ，做应用市场，做弹性伸缩，做音视频转码。我自学了 React，希望能在前端和用户体验上发力；把弹性伸缩交出去给新人实现，希望能调动起积极性；拒绝了经理不合理的要求，没做转码。我借面试的契机，与友商高层相谈，看我们的项目到底错在哪里。

在决策中，寻求价值最大，是非常重要的一项能力。纵观一年的历程，我（和经理）做了很多决策，我们都看不到背后的价值。我们好多次出现这样的对话：

> 我：我们要做的这个功能，会不会有人用啊？（老子花那么多功夫，到底值不值啊？）

> 经理：这就是个死循环了，如果不做，怎么会有人用呢？（先做吧，毛都没有，还谈什么推广）

> 我：（吭哧吭哧……做完了）

> 经理：（推广不出去……再让他做个新功能吧，反正他 NB）

> 我：（艹……）

从 7 月到现在，我们埋葬了包括这个系统在内的两个项目，团队从 10 人减少到 5 人。在这样的情况下，经理还在做最后一搏，试图把一个自称为秘密武器的项目，和一个视频编辑 SaaS 的项目搞出来。前一个项目我用两个星期证实了不可行（下篇详细说）；后一个项目没人来做。

经历失败，才有立场来探讨价值；通过复盘，我试图看清事件本质。码农中只有一种英雄主义，那就是在认清码之真相之后，依然热爱写代码。
